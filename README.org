#+startup: showall

* ammonite-term-repl
  Scala [[https://github.com/lihaoyi/Ammonite][Ammonite]] REPL in Emacs term mode.

** Install
   #+begin_src sh
   brew install ammonite-repl
   #+end_src

   It's not available in MELPA now. If you use =package.el=, you can install it like this

   #+begin_src elisp
   (defun package-install-from-raw-github (url)
     (let* ((base-url "https://raw.githubusercontent.com/")
            (full-url (concat base-url url))
            (target-dir (expand-file-name "~/.emacs.d/github-pkgs/"))
            (target-name (car-safe (last (split-string full-url "/" t))))
            (target (concat target-dir target-name)))
       (unless (file-exists-p target-dir)
         (mkdir target-dir))
       (unless (file-exists-p target)
         (url-copy-file full-url target t)
         (package-install-file target))))

   (package-install-from-raw-github "zwild/ammonite-term-repl/master/ammonite-term-repl.el")
   #+end_src

** Usage
   To start an ammonite repl, you can just hit ~M-x:~ with ~run-ammonite~

   #+begin_src elisp
   (add-hook 'scala-mode-hook
             (lambda ()
               (ammonite-term-repl-minor-mode t)))
   #+end_src
  
** Keybindings
| ammonite-term-repl             | "C-`" or "C-c C-z" |
| ammonite-term-repl-send-defun  | "C-c C-e"          |
| ammonite-term-repl-send-region | "C-c C-r"          |
| ammonite-term-repl-load-file   | "C-c C-l"          |

** Hooks
   ~ammonite-term-repl-minor-mode-hook~
   ~ammonite-term-repl-run-hook~

** Variables
   ~ammonite-term-repl-program-args~

   An example
   #+begin_src elisp
   (setq ammonite-term-repl-program-args '("-s" "--no-default-predef"))
   #+end_src

** Why not comint-mode
   Because ~(make-comint "amm")~ throws a =Exec format error=.
   Run ~amm~ in *eshell* also get the same error.


** Screenshot
   [[./screenshot.png]]
