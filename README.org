#+startup: showall

* ammonite-term-repl
  Scala [[https://github.com/lihaoyi/Ammonite][Ammonite]] REPL in Emacs term mode.

  [[https://melpa.org/#/ammonite-term-repl/][https://melpa.org/packages/ammonite-term-repl-badge.svg]]

** Install
   #+begin_src sh
   brew install ammonite-repl
   #+end_src

   It is recommended installed by the [[https://github.com/melpa/melpa][MELPA]] package system.

   You could install it by ~M-x~: with ~package-install~: ~ammonite-term-repl~.

** Usage
   To start an ammonite repl, you can just hit ~M-x:~ with ~run-ammonite~

   #+begin_src elisp
   (add-hook 'scala-mode-hook
             (lambda ()
               (ammonite-term-repl-minor-mode t)))
   #+end_src

   If you have a *build.sbt* with dependencies in this form (and only this form)
   #+begin_src scala
   libraryDependencies += "com.typesafe.akka" %% "akka-actor" % "2.5.21",
   libraryDependencies += "org.scalanlp" %% "breeze" % "0.13.2",
   libraryDependencies += "org.scalanlp" %% "breeze-natives" % "0.13.2",
   libraryDependencies += "org.scalanlp" %% "breeze-viz" % "0.13.2",
   libraryDependencies += "org.apache.spark" %% "spark-core" % "2.4.0" % "provided",
   libraryDependencies += "org.apache.spark" %% "spark-mllib" % "2.4.0" % "provided",
   libraryDependencies += "org.apache.spark" %% "spark-sql" % "2.4.0" % "provided",
   libraryDependencies += "org.apache.spark" %% "spark-streaming" % "2.4.0" % "provided"
   #+end_src

   command ~ammonite-term-repl-import-ivy-dependencies-from-sbt~ will try to convert and import this to your Ammonite process.

   #+begin_src scala
   import $ivy.`com.typesafe.akka::akka-actor:2.5.21`
   import $ivy.`org.scalanlp::breeze:0.13.2`
   import $ivy.`org.scalanlp::breeze-natives:0.13.2`
   import $ivy.`org.scalanlp::breeze-viz:0.13.2`
   import $ivy.`org.apache.spark::spark-core:2.4.0`
   import $ivy.`org.apache.spark::spark-mllib:2.4.0`
   import $ivy.`org.apache.spark::spark-sql:2.4.0`
   import $ivy.`org.apache.spark::spark-streaming:2.4.0`
   #+end_src

** Keybindings
| ammonite-term-repl             | C-` or C-c C-z |
| ammonite-term-repl-send-defun  | C-c C-e        |
| ammonite-term-repl-send-region | C-c C-r        |
| ammonite-term-repl-load-file   | C-c C-l        |

** Hooks
   ~ammonite-term-repl-minor-mode-hook~
   ~ammonite-term-repl-run-hook~

** Variables
   ~ammonite-term-repl-program-args~

   An example
   #+begin_src elisp
   (setq ammonite-term-repl-program-args '("-s" "--no-default-predef"))
   #+end_src

** Why not comint-mode
   Because ~(make-comint "amm")~ throws a =Exec format error=.
   Run ~amm~ in *eshell* also get the same error.


** Screenshot
   [[./screenshot.png]]
